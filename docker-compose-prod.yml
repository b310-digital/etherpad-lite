version: "3.8"

# Add this file to extend the docker-compose setup, e.g.:
# docker-compose -f docker-compose-prod.yml -f docker-compose-prod.override.yml --env-file .env.prod build --no-cache
# docker-compose -f docker-compose-prod.yml -f docker-compose-prod.override.yml --env-file .env.prod up -d --build --force-recreate

services:
  app_prod:
    build:
      context: .
      args:
        ETHERPAD_PLUGINS: >-
          kitsteam/ep_comments_page
          ep_image_upload
          kitsteam/ep_push2delete
          ep_embedded_hyperlinks2
          ep_headings2
          ep_align
          ep_font_color
          ep_delete_empty_pads
          ep_delete_after_delay
          ep_helmet
          ep_font_size
          ep_disable_imports
      target: production
    depends_on:
      - postgres_prod
    environment:
      DB_CHARSET: ${DOCKER_COMPOSE_APP_PROD_ENV_DB_CHARSET:-utf8mb4}
      DB_HOST: postgres_prod
      DB_NAME: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_DATABASE:?}
      DB_PASS: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_PASSWORD:?}
      DB_PORT: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_PORT:-5432}
      DB_TYPE: "postgres"
      DB_USER: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_USER:?}
      # For now, the env var DEFAULT_PAD_TEXT cannot be unset or empty; it seems to be mandatory in the latest version of etherpad
      DEFAULT_PAD_TEXT: ${DOCKER_COMPOSE_APP_PROD_ENV_DEFAULT_PAD_TEXT:- }
      DISABLE_IP_LOGGING: ${DOCKER_COMPOSE_APP_PROD_ENV_DISABLE_IP_LOGGING:-true}
      SOFFICE: ${DOCKER_COMPOSE_APP_PROD_ENV_SOFFICE:-null}
      TRUST_PROXY: ${DOCKER_COMPOSE_APP_PROD_ENV_TRUST_PROXY:-true}
    restart: always
    ports:
      - "${DOCKER_COMPOSE_APP_PROD_PORT_PUBLISHED:-9001}:${DOCKER_COMPOSE_APP_PROD_PORT_TARGET:-9001}"

  postgres_prod:
    image: postgres:12-alpine
    # Pass config parameters to the mysql server.
    # Find more information below when you need to generate the ssl-relevant file your self
    environment:
      POSTGRES_DB: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_DATABASE:?}
      POSTGRES_PASSWORD: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_PASSWORD:?}
      POSTGRES_PORT: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_PORT:-5432}
      POSTGRES_USER: ${DOCKER_COMPOSE_POSTGRES_PROD_ENV_POSTGRES_USER:?}
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    # Exposing the port is not needed unless you want to access this database instance from the host.
    # Be careful when other postgres docker container are running on the same port
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata

volumes:
  postgres_data: